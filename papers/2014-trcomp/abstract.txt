Twitter Crowd Translation – Design and Objectives
ˇ
Eduard Subert
Faculty of Nuclear Sciences and Physical Engineering
Czech Technical University in Prague
Ondˇrej Bojar
Institute of Formal and Applied Linguistics
Faculty of Mathematics and Physics
Charles University, Prague, Czech Republic
June 20, 2014

1

Introduction

This paper present Twitter Crowd Translation (TCT), our project aimed at developing of an
online infrastructure serving two purposes: (1) providing online or near-online translation to
social media and (2) gathering relevant training data to support machine translation of such
content. We specifically focus on Twitter and the open-source machine translation toolkit
Moses. We proceed in the spirit of open society and community service as our project will rely
on unpaid voluntary work.
In Section 2, we provide the motivation for both goals of our work. Section ?? briefly lists the
challenges specific to machine translation of social media, focusing more on the technical aspects
than on the inherent linguistic characteristics concerning style, register etc. Section 3 describes
the overall design of our tool in terms of “social engineering” and Section 4 complements it by
the technical aspects.

2

Motivation

Since their inception, social networks have gained tremendous popularity and they have successfully replaced established means of communication for a wide range of circumstances. While
the services are being used across the world, with geographical location of the users having
little or no effect on the communication, the natural obstacle of languages spoken remains to
fragment the networks.
For stable and long-lasting content, the language barrior is less severe: examples such as the
Wikipedia or its sister project Wiktionary have shown that the community of random unpaid
volunteers is able to provide translations into all possible languages. As the time progresses,
an enormous wealth of information in many languages is accumulated.
On the other hand, many networks are used in a very streaming fashion, Twitter being
the most prominent example. On the production side, anybody can contribute his message,
which is directly forwarded to a number of followers. On the consumption side, everybody is
flooded with messages from sources he or she selects. Given the constant flow of new bits of
information, there is little or no point in looking back. Whatever messages I missed, I missed;

1

XXX obrazek
Figure 1: Twitter Crowd Translation in a nutshell.
important affairs will reappear as new anyway and there is usually not enough time to analyze
closed issues. The main value of these networks is the speed in which new issues are noticed
and reported.
Cracking language barriors for the stable content is feasible and to a large extent already
well achieved: the community provides quality translation and (statistical) machine translation
(MT) is usually easy to apply on this “edited” text. Providing translation to “streaming
networks” is much more challenging. The input is much noisier, significantly reducing MT
output quality, and perhaps more importantly, the lag that manual translation would cause
reduces the speed of delivery, damaging the main value brought by the network. Standard
means of communication such as public broadcasting or newspaper remain adequate for these
occurrences.
The societalXXXover-slovo motivation of our project is to break the language barrior for
streaming social networks. The technological motivation is to significantly advance MT quality
by collecting more data and more topical data. What Wikipedia and on-line MT services (both
commercial and open-source) jointly achieved for stable content (MT engines benefiting from
community translations and community benefiting from better MT of prose), we would like to
sparkleXXXover-slovo for streaming networks and their topical, casual and unedited content.

3

Design of TCT

We see two main reasons why people contribute translation to community projects: sharing the
wealth (“If this information (in my language), donated by a random fellow, was useful for me, my
donation is likely to be useful for someone else.”), and self-promotion (“If I contribute, and my
contribution is well received, I will gain some good reputation with all desirable consequences,
including a better position at the job market.”). We hope that our project can rely on the same
principles.
TCT should also be as thin and transparent layer as possible, to cause only little disruption
to the communication. The primary consequence of this maxim is that the main mass of users
should stay within their platform – Twitter in this case.
Figure 1 summarizes the processes in TCT: a tweet in a foreign language is tweeted by
someone and observed by a user. The user does not understand the message or is not quite
certain about its content. Within his Twitter reader, the user asks “the ambient intelligence”
to have this message translated into the language of his choice. Our TCT server notices this
request and forwards it to human and machine translators. Once sufficiently good translations
are collected (and human judges can help here as well), the translation is tweeted “back” by
our server. We put “back” to quotes, since technically, some users may prefer to follow only
our translated messages and not the source channel at all.
The schema reveal certain roles of humans in the process:
Author is the person that posted the original message.
Selector is the Twitter user who decides that a particular tweet is worth translating to another
language. Selector may or may not understand the source language.
2

Translator is a bilingual person, or at least a person that understands the given source language is is fluent in the target language.
Judge should vaguely understand the source language and be fluent in the target language.
Recipient is the final reader of the translated tweet.
Sometimes, the same person takes several roles in the process of translation of one tweet. For
instance, Author may already forsee some demand on his tweet and may Select it for translation.
Selector may coincide with Translator, being a person who lives in two communities like a foreign
reporter. Translator can also Judge the quality of translations; depending on the actual number
of participants in our system, we may want to avoid people judging their own translations.

4

Technical Aspects of TCT

There are many successful crowd driven projects online; most notably Wikipedia or its sister
project Wiktionary. Second example is much more important for our project since it shows
that users all over the world are eager to translate in various languages. (As of June 20, 2014
site claims to have 3,766,260 entries with English definitions from over 1400 languages.) This
approach could also improve role of machine translation in daily communication since it is
designed to let users translate this type of phrases.

5

Our Proposal

In general there are three steps in work cycle of such application. Addition of new phrases
their translation and finally their evaluation. Our solution to first step is to use social network
Twitter. Application periodically scans the network for hashtag #tctrq and adds content of
such tweets to database. Each tweet is required to contain another hashtag with the target
language of translation. Twitter uses its own system to determine language of each tweet and
our application uses this information.
Second step the translation takes place immediately thereafter. Each of registered translators capable of translation between source and target language is notified via e-mail and submits
translation as a reply e-mail. These replies are periodically collected and added to database.
At this point machine translation from Moses is added to compete with human translators.
Third step of work cycle the evaluation is the only step that requires user to come to our
website and use simple interface to vote between two translations. Voting is of course blinded.
After gaining high enough score the translation is posted back to Twitter as a response to
request and thus completing the cycle.

6

Our solution

The application is developed with the CakePHP framework. For all e-mail communication we
use associated Gmail account through IMAP protocol. The Twitter integration is done with
Simple PHP Wrapper for Twitter through REST API.

3

References
References
Moses - http://www.statmt.org/moses/
Twitter

- http://twitter.com/

CakePHP

- http://cakephp.org/

Simple PHP Wrapper for Twitter API v1.1 calls
api-php

4

- http://github.com/J7mbo/twitter-

